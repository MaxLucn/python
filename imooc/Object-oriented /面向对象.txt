面向对象的三个特征：封装、多态、继承
            封装：只能通过特定的方法访问数据，方便修改和实现
                 """将类的某些信息隐藏在类内部，不允许外部程序直接访问
                通过该类提供的方法来实现附隐藏信息的操作和访问"""
            多态：允许不同类的对象对同一消息作出不同的响应（必要条件：满足继承关系、父类引用指向子类对象）
            继承：类与类之间的关系。实现代码的可重用性，缩短开发周期
面向对象与面向过程的区别：
类和对象：类是模型，确定对象将会有拥有特征和行为
        对象是类的实例表现
        类是对象的类型
        对象是特定类型的数据

类：面向对象的基础
   类的实例称为对象
   用户自定义的类型
   类里面有很多自定义的属性和方法

多态：每当无需知道对象是什么样的就能对其执行操作时，都是多态在起作用


类的高级特性：
@property：将类的方法当作属性来使用
__slots__：1、为指定的类设置一个静态属性列表、为属性很少的类节约内存空间
           2、如果给父类添加了 slots 方法，就只能在原有的属性和方法进行修改，无法再添加新的进去
           3、子类继承了父类的属性但是没有进一步的添加 slots 方法的话，再子类里是可以进一步添加新的属性和方法的，但是继承于父类的
           属性和方法依旧不支持修改


类的静态方法和实例方法：
@staticmethod    表示静态方法
@classmethod   表示类方法