es6 跟 js 的关系

变量、常量、解构赋值

函数、箭头函数
    箭头函数体内的 this 指向定义时所在的对象，不是实例化后的对象(在函数定义时绑定)

    什么是 this
        指函数执行过程中，自动生成的一个内部对象，是指当前的对象，名只在当前
        函数内部使用。
        运行是跟运行环境绑定
            浏览器： this === window
            Node 环境：this === global
        当函数被作为某个对象的方法调用的时候，this 指向那个对象
        关于 this 的指向
            类方法中的 this 指向类的实例；静态方法中的 this 指向类

    关于构造函数 constructor
        构造函数是类的默认方法，通过 new 命令生成实例时，会自动调用该方法。
        一个类必须有 constructor 方法，如果没有显示定义，一个空的 constructor 方法
        会被默认添加
    

ES6 的继承
    extends 继承父类的方法
    super 调用父类的方法 

属性表达式
    类的属性名，可以采用表达式，使用 [] 来引用

模块化
    增强代码的可维护性、可阅读性、可扩展性
    模块是对内部逻辑的封装，只对外提供接口
    一个 js 文件就是一个模块
    ES6 中使用 export 关键字对外暴露接口（导出）
        1、直接导出
        2、批量导出。批量导出的时候可以通过 as 关键字制定别名
        3、使用 export default 默认导出
        需要注意的是：语句的位置，在代码顶层，不能在语句块内部
    ES6 中使用 import 关键字导入一个模块
        1、导入需要的部分内容
        2、导入全部内容，使用 as 指定别名
    
    使用 ES6 导入导出时需要注意的事情：
        1、不能在块级作用域内执行导入导出
            if (true){
                export let a = 1
            }    // 报错 SyntaxError

        2、不能直接导出变量的值
            export 3.14152352   //  报错 SyntaxError

        3、注意 import 顺序
            let b = 1;
            import b from './b.js'   // 报错 